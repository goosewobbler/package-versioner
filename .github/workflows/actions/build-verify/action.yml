description: 'Build and verify packages'
outputs:
  package_version:
    description: 'Current package version'
    value: ${{ steps.verify_build.outputs.package_version }}
runs:
  using: composite
  steps:
    - name: 🏗️ Build package
      shell: bash
      run: pnpm build

    - name: 🔍 Verify build
      id: verify_build
      shell: bash
      run: |
        echo "::group::Verifying package integrity"

        DIST_DIR="dist"
        ROOT_PKG_JSON="package.json"

        echo "Verifying build output in $DIST_DIR"
        echo "Verifying root $ROOT_PKG_JSON"

        if [ ! -d "$DIST_DIR" ]; then
          echo "::error::Build output directory not found: $DIST_DIR"
          exit 1
        fi

        # Check for expected files in dist directory
        if [ ! "$(find "$DIST_DIR" -maxdepth 1 -name "*.js" | wc -l)" -gt 0 ]; then
          echo "::error::No JavaScript files found directly in $DIST_DIR"
          # Allow files in subdirs if needed, adjust find command
          # Example: find "$DIST_DIR" -name "*.js"
          exit 1
        fi

        if [ ! "$(find "$DIST_DIR" -maxdepth 1 -name "*.d.ts" | wc -l)" -gt 0 ]; then
          echo "::error::No TypeScript declaration files found directly in $DIST_DIR"
          # Allow files in subdirs if needed, adjust find command
          exit 1
        fi

        # Check root package.json
        if [[ ! -f "$ROOT_PKG_JSON" ]]; then
            echo "::error::Root package.json not found at $ROOT_PKG_JSON"
            exit 1
        fi
        # Check that package.json has required fields
        PACKAGE_VERSION=""
        for field in "name" "version" "main" "types"; do
          # Check if jq is available
          if ! command -v jq &> /dev/null; then
              echo "::error::jq command could not be found. Please install jq."
              exit 1
          fi
          if ! jq -e ".$field" "$ROOT_PKG_JSON" > /dev/null; then
            echo "::error::Missing required field '$field' in $ROOT_PKG_JSON"
            exit 1
          fi
          # Capture version while checking
          if [[ "$field" == "version" ]]; then
              PACKAGE_VERSION=$(jq -r '.version' "$ROOT_PKG_JSON")
          fi
        done

        # Verify that no unexpected files are included in dist
        if find "$DIST_DIR" -name "*.spec.js" -o -name "*.spec.ts" -o -name "*.test.js" -o -name "*.test.ts" | grep -q .; then
          echo "::error::Test files found in distribution directory: $DIST_DIR"
          find "$DIST_DIR" -name "*.spec.js" -o -name "*.spec.ts" -o -name "*.test.js" -o -name "*.test.ts"
          exit 1
        fi

        echo "✅ Package verified successfully"
        echo "::endgroup::"

        echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
